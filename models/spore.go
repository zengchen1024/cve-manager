package models

import (
	"github.com/astaxie/beego/logs"
	"github.com/astaxie/beego/orm"

	"github.com/opensourceways/cve-manager/common"
)

// delete data
func DelMindSporeBrandTagsByBrand(brand, packageName string) {
	o := orm.NewOrm()
	err := o.Raw("delete from cve_mind_spore_brand_tags where brand = ? and package_name = ?",
		brand, packageName).QueryRow()
	logs.Info("DelMindSporeBrandTagsByBrand", err)
}

// insert data
func InsertMindSporeBrandTags(mbt *MindSporeBrandTags) (int64, error) {
	o := orm.NewOrm()
	id, err := o.Insert(mbt)
	return id, err
}

func NewMindSporeBrandTags(pkgName, branch, tag string) (int64, error) {
	mbt := MindSporeBrandTags{PackageName: pkgName, Brand: branch, Tags: tag, CreateTime: common.GetCurTime()}

	return InsertMindSporeBrandTags(&mbt)
}

func QueryMindSporeBrandTags(osl *MindSporeBrandTags, field ...string) error {
	o := orm.NewOrm()
	err := o.Read(osl, field...)
	return err
}

func QueryMindSporeTagsByBrand(osl *MindSporeBrandTags) (mbt []MindSporeBrandTags) {
	o := orm.NewOrm()
	_, err := o.Raw("SELECT * from cve_mind_spore_brand_tags WHERE package_name = ? and brand = ?",
		osl.PackageName, osl.Brand).QueryRows(&mbt)
	logs.Info("QueryMindSporeTagsByBrand, err: ", err)
	return
}
